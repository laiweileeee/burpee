{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\laiwe\\\\burpee\\\\src\\\\Reminder.js\";\nimport React, { Component } from 'react';\nimport './Reminder.css';\nimport moment from 'moment';\nimport { bake_cookie, read_cookie } from 'sfcookies';\nconst initialState = {\n  input: '',\n  dueDate: '',\n  reminders: []\n}; //instead of passing props.onInputChange, destructure it instead\n\nclass Reminder extends Component {\n  constructor() {\n    super();\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onDateChange = event => {\n      this.setState({\n        dueDate: event.target.value\n      });\n    };\n\n    this.addReminders = () => {\n      if (this.state.input && this.state.dueDate) {\n        const reminder = {\n          id: Math.random(),\n          text: this.state.input,\n          dueDate: this.state.dueDate\n        };\n        this.state.reminders.push(reminder); //resetting the input bar\n\n        this.setState({\n          input: ''\n        });\n        document.getElementById(\"myForm\").value = '';\n        bake_cookie('reminders', this.state.reminders);\n        console.log('added reminders', this.state.reminders);\n      }\n    };\n\n    this.clearReminders = () => {\n      this.setState({\n        initialState\n      });\n      bake_cookie('reminders', this.state.reminders);\n      console.log('clear', this.state.reminders);\n    };\n\n    this.deleteReminders = id => {\n      const updatedReminders = this.state.reminders.filter(reminder => reminder.id !== id);\n      this.setState({\n        reminders: updatedReminders\n      });\n      bake_cookie('reminders', updatedReminders);\n      console.log('deleted cookies', this.state.reminders);\n    };\n\n    this.displayReminders = () => {\n      const reminderList = this.state.reminders.map(reminder => {\n        return /*#__PURE__*/React.createElement(\"ul\", {\n          id: \"ul\",\n          className: \"list-group col-l-4\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          key: reminder.id,\n          className: \"list-group-item\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"list-item\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }\n        }, reminder.text), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"em\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 34\n          }\n        }, moment(new Date(reminder.dueDate)).calendar())), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"em\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 34\n          }\n        }, moment(new Date(reminder.dueDate)).fromNow()))), /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => this.deleteReminders(reminder.id),\n          className: \"btn btn-danger grow\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }\n        }, \"\\u2715\")));\n      });\n      return reminderList;\n    };\n\n    this.state = {\n      input: '',\n      dueDate: '',\n      reminders: read_cookie('reminders')\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      fontSize: \"10px\",\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, \"Reminder Pro\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"reminder-inputs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"myForm\",\n      onChange: this.onInputChange,\n      className: \"form-control\",\n      placeholder: \"Insert item name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"myForm\",\n      onChange: this.onDateChange,\n      className: \"form-control\",\n      type: \"datetime-local\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addReminders,\n      className: \"btn btn-success grow\",\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 29\n      }\n    }, \"Add Reminder\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 29\n      }\n    }, this.displayReminders()), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.clearReminders,\n      className: \"btn btn-danger\",\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 29\n      }\n    }, \"Clear All Reminders\"))));\n  }\n\n}\n\nexport default Reminder;","map":{"version":3,"sources":["C:/Users/laiwe/burpee/src/Reminder.js"],"names":["React","Component","moment","bake_cookie","read_cookie","initialState","input","dueDate","reminders","Reminder","constructor","onInputChange","event","setState","target","value","onDateChange","addReminders","state","reminder","id","Math","random","text","push","document","getElementById","console","log","clearReminders","deleteReminders","updatedReminders","filter","displayReminders","reminderList","map","Date","calendar","fromNow","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './Reminder.css';\r\nimport moment from 'moment';\r\nimport { bake_cookie, read_cookie } from 'sfcookies';\r\n\r\nconst initialState = {\r\n    input: '',\r\n    dueDate: '',\r\n    reminders: []\r\n}\r\n\r\n//instead of passing props.onInputChange, destructure it instead\r\nclass Reminder extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            input: '',\r\n            dueDate: '',\r\n            reminders: read_cookie('reminders'),\r\n        }\r\n    }\r\n\r\n    onInputChange = (event) => {\r\n        this.setState({ input: event.target.value });\r\n    }\r\n\r\n    onDateChange = (event) => {\r\n        this.setState({ dueDate: event.target.value });\r\n    }\r\n    // renderReminders = () => {\r\n    //     if (this.state.input) {\r\n    //         this.state.reminders.push(this.state.input)\r\n    //         let ul = document.getElementById('ul');\r\n\r\n    //         let li = document.createElement('li');         \r\n    //         li.classList.add('list-group-item')\r\n\r\n    //         let btn = document.createElement('div');\r\n    //         btn.classList.add('delete-button');\r\n\r\n    //         ul.appendChild(li);\r\n    //         li.innerHTML += this.state.input;\r\n    //         li.appendChild(btn);\r\n    //         btn.innerHTML += '&#x2715';\r\n    //         bake_cookie('reminders', ul.children);\r\n    //         console.log(ul.children)\r\n    //     }\r\n    //     //resetting the input bar\r\n    //     this.setState({ input: '' })\r\n    //     document.getElementById(\"myForm\").value = '';\r\n    // }\r\n\r\n    //  renderCookies = () => {\r\n    //     console.log('here')\r\n    //     return read_cookie('reminders');\r\n    //  }\r\n\r\n    addReminders = () => {\r\n        if (this.state.input && this.state.dueDate) {\r\n            const reminder = {\r\n                id: Math.random(),\r\n                text: this.state.input,\r\n                dueDate: this.state.dueDate\r\n            };\r\n            this.state.reminders.push(reminder);\r\n            //resetting the input bar\r\n            this.setState({ input: '' })\r\n            document.getElementById(\"myForm\").value = '';\r\n            bake_cookie('reminders', this.state.reminders);\r\n            console.log('added reminders', this.state.reminders);\r\n        }\r\n    }\r\n\r\n    clearReminders = () => {\r\n        this.setState({ initialState });\r\n        bake_cookie('reminders', this.state.reminders);\r\n        console.log('clear',  this.state.reminders);\r\n    }\r\n\r\n    deleteReminders = (id) => {\r\n        const updatedReminders = this.state.reminders.filter(reminder => reminder.id !== id);\r\n        this.setState({ reminders: updatedReminders });\r\n        bake_cookie('reminders', updatedReminders);\r\n        console.log('deleted cookies', this.state.reminders);\r\n    }\r\n\r\n    displayReminders = () => {\r\n        const reminderList = this.state.reminders.map(reminder => {\r\n            return (\r\n                <ul id=\"ul\" className=\"list-group col-l-4\">\r\n                    <li key={reminder.id} className=\"list-group-item\">\r\n                        <div className=\"list-item\">\r\n                            <div>{reminder.text}</div>\r\n                            <div><em>{moment(new Date(reminder.dueDate)).calendar()}</em></div>\r\n                            <div><em>{moment(new Date(reminder.dueDate)).fromNow()}</em></div>\r\n                        </div>\r\n                        <button onClick={() => this.deleteReminders(reminder.id)} className=\"btn btn-danger grow\">&#x2715;</button>\r\n                    </li>\r\n                </ul>\r\n            );\r\n        })\r\n        return reminderList;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <div fontSize=\"10px\" className=\"title\">\r\n                    Reminder Pro\r\n                </div>\r\n                <div className=\"form-inline\">\r\n\r\n                    <div className=\"container\">\r\n                        <div className=\"reminder-inputs\">\r\n\r\n                            <input\r\n                                id=\"myForm\"\r\n                                onChange={this.onInputChange}\r\n                                className=\"form-control\"\r\n                                placeholder=\"Insert item name\"\r\n                            />\r\n\r\n                            <input\r\n                                id=\"myForm\"\r\n                                onChange={this.onDateChange}\r\n                                className=\"form-control\"\r\n                                type=\"datetime-local\"\r\n                            />\r\n\r\n                            <button\r\n                                onClick={this.addReminders}\r\n                                className=\"btn btn-success grow\"\r\n                                type=\"button\">\r\n                                Add Reminder\r\n                            </button>\r\n                        </div>\r\n                            <div>\r\n                                {this.displayReminders()}\r\n                            </div>\r\n\r\n                            <button\r\n                                onClick={this.clearReminders}\r\n                                className=\"btn btn-danger\"\r\n                                type=\"button\">\r\n                                Clear All Reminders\r\n                            </button>\r\n                        </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Reminder;"]},"metadata":{},"sourceType":"module"}