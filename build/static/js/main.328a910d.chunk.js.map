{"version":3,"sources":["components/SignIn.js","components/Register.js","components/Reminder.js","components/Card.js","components/CardList.js","components/pokemon.js","components/Milestone.js","App.js","serviceWorker.js","index.js"],"names":["SignIn","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","id","loadUser","onRouteChange","this","className","data-tilt","size","src","alt","type","name","placeholder","onChange","aria-hidden","onClick","rel","href","Component","Register","onNameChange","onSubmitRegister","runReminders","Reminder","onInputChange","input","onDateChange","dueDate","addReminders","reminder","Math","random","text","reminders","push","document","getElementById","bake_cookie","console","log","moment","Date","clearReminders","deleteReminders","updatedReminders","filter","displayReminders","map","key","wrapperComplete","fromNow","calendar","allowNotifications","Push","Permission","has","renderExpiryNotifications","item","time","create","icon","timeout","window","focus","close","renderAddConfirmation","wrapperAdd","completeReminders","componentDidMount","forEach","read_cookie","unlockedList","Card","removeClass","count","countReq","parent","includes","alert","classList","remove","children","add","renderParentClass","renderChildClass","height","weight","width","CardList","pokemon","style","flex","i","Milestone","initialState","route","isSignedIn","entries","joined","App","data","newCount","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.328a910d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass SignIn extends Component {\r\n    // eslint-disable-next-line\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signInEmail: '',\r\n            signInPassword: ''\r\n        }\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        this.setState({signInEmail: event.target.value})\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({signInPassword: event.target.value})\r\n    }\r\n   \r\n    onSubmitSignIn = () => {\r\n        fetch('https://secret-harbor-87790.herokuapp.com/signin', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                email: this.state.signInEmail,\r\n                password: this.state.signInPassword\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(user => {\r\n                if (user.id) {     \r\n                    this.props.loadUser(user);\r\n                    this.props.onRouteChange('home');\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const {onRouteChange} = this.props;\r\n        return (\r\n            <div>\r\n                <div className=\"limiter\">\r\n                    <div className=\"container-login100\">\r\n                        <div className=\"wrap-login100\">\r\n                            <div className=\"login100-pic js-tilt\" data-tilt>\r\n                                <h1 className=\"appname grow\" size=\"50px\">\r\n                                    <font size=\"+5\">\r\n                                    B U R P E E\r\n                                    <hr></hr>\r\n                                    </font>\r\n                                </h1>\r\n                                <img src=\"images/img-01.png\" alt=\"IMG\" />\r\n\r\n                            </div>\r\n\r\n                            <div className=\"login100-form validate-form\">\r\n                                \r\n                                <span className=\"login100-form-title\">\r\n                                    Member Login\r\n                                    <hr></hr>\r\n                                </span>\r\n\r\n                                <div className=\"wrap-input100 validate-input\" >\r\n                                    <input \r\n                                        className=\"input100 grow\" \r\n                                        type=\"text\" \r\n                                        name=\"email\" \r\n                                        placeholder=\"Email\" \r\n                                        onChange={this.onEmailChange}\r\n                                    />\r\n                                    <span className=\"focus-input100\"></span>\r\n                                    <span className=\"symbol-input100\">\r\n                                        <i className=\"fa fa-envelope\" aria-hidden=\"true\"></i>\r\n                                    </span>\r\n                                </div>\r\n\r\n                                <div className=\"wrap-input100 validate-input\" >\r\n                                    <input \r\n                                        className=\"input100 grow\" \r\n                                        type=\"password\" \r\n                                        name=\"pass\" \r\n                                        placeholder=\"Password\" \r\n                                        onChange={this.onPasswordChange}\r\n                                    />\r\n                                    <span className=\"focus-input100\"></span>\r\n                                    <span className=\"symbol-input100\">\r\n                                        <i className=\"fa fa-lock\" aria-hidden=\"true\"></i>\r\n                                    </span>\r\n                                </div>\r\n\r\n                                <div className=\"container-login100-form-btn\">\r\n                                    <button \r\n                                        onClick={this.onSubmitSignIn} \r\n                                        className=\"login100-form-btn shadow-4 grow\">\r\n                                        Login\r\n                                    </button>\r\n                                </div>\r\n\r\n                                <div className=\"text-center p-t-136\">\r\n\r\n                                    <p onClick={() => onRouteChange('register')} className=\"txt2\">\r\n                                        Create your Account\r\n                                    <i className=\"fa fa-long-arrow-right m-l-5\" aria-hidden=\"true\"></i>\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n                <link rel=\"stylesheet\" type=\"text/css\" href=\"vendor/bootstrap/css/bootstrap.min.css\" />\r\n                <link rel=\"stylesheet\" type=\"text/css\" href=\"fonts/font-awesome-4.7.0/css/font-awesome.min.css\" />\r\n                <link rel=\"stylesheet\" type=\"text/css\" href=\"vendor/animate/animate.css\" />\r\n                <link rel=\"stylesheet\" type=\"text/css\" href=\"vendor/css-hamburgers/hamburgers.min.css\" />\r\n                <link rel=\"stylesheet\" type=\"text/css\" href=\"vendor/select2/select2.min.css\" />\r\n                <link rel=\"stylesheet\" type=\"text/css\" href=\"css/util.css\" />\r\n                <link rel=\"stylesheet\" type=\"text/css\" href=\"css/main.css\" />\r\n\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\n\r\nexport default SignIn;","import React, { Component } from 'react';\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            name: ''\r\n        }\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        this.setState({ email: event.target.value })\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({ password: event.target.value })\r\n    }\r\n\r\n    onNameChange = (event) => {\r\n        this.setState({ name: event.target.value })\r\n    }\r\n\r\n    onSubmitRegister = () => {\r\n        fetch('https://secret-harbor-87790.herokuapp.com/register', {\r\n            method: 'post',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                name: this.state.name\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(user => {\r\n                if (user.id) {\r\n                    this.props.loadUser(user);\r\n                    this.props.onRouteChange('home');\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { onRouteChange } = this.props;\r\n        return (\r\n            <div>\r\n                <div className=\"limiter\">\r\n                    <div className=\"container-login100\">\r\n                        <div className=\"wrap-login100\">\r\n                            <div className=\"login100-pic js-tilt\" data-tilt>\r\n                                <h1 className=\"appname\" size=\"50px\">\r\n                                    <font size=\"+5\">\r\n                                        B U R P E E\r\n                                    <hr></hr>\r\n                                    </font>\r\n                                </h1>\r\n\r\n                                <img src=\"images/img-01.png\" alt=\"IMG\" />\r\n                            </div>\r\n\r\n                            <div className=\"login100-form validate-form\">\r\n                                <span className=\"login100-form-title\">\r\n                                    Register\r\n                                    <hr></hr>\r\n                                </span>\r\n\r\n                                <div className=\"wrap-input100\" >\r\n                                    <input\r\n                                        className=\"input100 grow\"\r\n                                        type=\"text\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Name\"\r\n                                        onChange={this.onNameChange}\r\n                                        />\r\n                                    <span className=\"focus-input100\"></span>\r\n                                    <span className=\"symbol-input100\">\r\n                                        <i className=\"fa fa-user\" aria-hidden=\"true\"></i>\r\n                                    </span>\r\n                                </div>\r\n\r\n                                <div className=\"wrap-input100 \" >\r\n                                    <input\r\n                                        className=\"input100 grow\"\r\n                                        type=\"text\"\r\n                                        name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        onChange={this.onEmailChange}\r\n                                        />\r\n                                    <span className=\"focus-input100\"></span>\r\n                                    <span className=\"symbol-input100\">\r\n                                        <i className=\"fa fa-envelope\" aria-hidden=\"true\"></i>\r\n                                    </span>\r\n                                </div>\r\n                            \r\n                                <div className=\"wrap-input100\" >\r\n                                    <input\r\n                                        className=\"input100 grow\"\r\n                                        type=\"password\"\r\n                                        name=\"pass\"\r\n                                        placeholder=\"Password\"\r\n                                        onChange={this.onPasswordChange}\r\n                                        />\r\n                                    <span className=\"focus-input100\"></span>\r\n                                    <span className=\"symbol-input100\">\r\n                                        <i className=\"fa fa-lock\" aria-hidden=\"true\"></i>\r\n                                    </span>\r\n                                </div>                   \r\n\r\n                                <div className=\"container-login100-form-btn\">\r\n                                    <button \r\n                                        onClick={this.onSubmitRegister} \r\n                                        className=\"login100-form-btn shadow-5 grow\">\r\n                                        Register\r\n                                    </button>\r\n                                </div>\r\n\r\n                                <div className=\"text-center p-t-136\">\r\n                                    <p onClick={() => onRouteChange('signin')} className=\"txt2\">\r\n                                    <i className=\"fa fa-long-arrow-left m-l-5\" aria-hidden=\"true\"></i>\r\n                                     &nbsp; Back to Sign-in               \r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <link rel=\"stylesheet\" type=\"text/css\" href=\"vendor/bootstrap/css/bootstrap.min.css\" />\r\n                <link rel=\"stylesheet\" type=\"text/css\" href=\"fonts/font-awesome-4.7.0/css/font-awesome.min.css\" />\r\n                <link rel=\"stylesheet\" type=\"text/css\" href=\"vendor/animate/animate.css\" />\r\n                <link rel=\"stylesheet\" type=\"text/css\" href=\"vendor/css-hamburgers/hamburgers.min.css\" />\r\n                <link rel=\"stylesheet\" type=\"text/css\" href=\"vendor/select2/select2.min.css\" />\r\n                <link rel=\"stylesheet\" type=\"text/css\" href=\"css/util.css\" />\r\n                <link rel=\"stylesheet\" type=\"text/css\" href=\"css/main.css\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Register;","import React, { Component } from 'react';\r\nimport './Reminder.css';\r\nimport moment from 'moment';\r\nimport Push from 'push.js';\r\nimport { bake_cookie, read_cookie } from 'sfcookies';\r\n\r\n\r\nlet runReminders = [];\r\n\r\n//instead of passing props.onInputChange, destructure it instead\r\nclass Reminder extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            input: '',\r\n            dueDate: '',\r\n            reminders: read_cookie('reminders'),\r\n        }\r\n    }\r\n\r\n    onInputChange = (event) => {\r\n        this.setState({ input: event.target.value });\r\n    }\r\n\r\n    onDateChange = (event) => {\r\n        this.setState({ dueDate: event.target.value });\r\n    }\r\n\r\n    addReminders = () => {\r\n        if (this.state.input && this.state.dueDate) {\r\n            const reminder = {\r\n                id: Math.random(),\r\n                text: this.state.input,\r\n                dueDate: this.state.dueDate\r\n            };\r\n            this.state.reminders.push(reminder);\r\n            //resetting the input bar\r\n            this.setState({ input: '' })\r\n            document.getElementById(\"myForm\").value = '';\r\n            bake_cookie('reminders', this.state.reminders);\r\n            console.log('added reminders', this.state.reminders);\r\n            console.log('curernt date', this.state.reminders.dueDate);\r\n            console.log('js date', moment(new Date()))\r\n\r\n        }\r\n    }\r\n\r\n    clearReminders = () => {\r\n        this.setState({ reminders: [] });\r\n        bake_cookie('reminders', this.state.reminders);\r\n        console.log('clear', this.state.reminders);\r\n    }\r\n\r\n    deleteReminders = (id) => {\r\n        const updatedReminders = this.state.reminders.filter(reminder => reminder.id !== id);\r\n        this.setState({ reminders: updatedReminders });\r\n        bake_cookie('reminders', updatedReminders);\r\n        console.log('deleted cookies', this.state.reminders);\r\n    }\r\n\r\n    displayReminders = () => {\r\n        const reminderList = this.state.reminders.map(reminder => {\r\n            return (\r\n                <ul id=\"ul\" className=\"list-group col-l-4\">\r\n                    <li key={reminder.id} className=\"list-group-item shadow-4\">\r\n                        <button onClick={() => this.wrapperComplete(reminder)} className=\"btn btn-primay grow shadow-4\">&#x2713;</button>\r\n                        <div className=\"list-item\">\r\n                            <div>{reminder.text}</div>\r\n                            <div><em>{moment(new Date(reminder.dueDate)).fromNow()}</em></div>\r\n                            <div><em>{moment(new Date(reminder.dueDate)).calendar()}</em></div>\r\n                        </div>\r\n                        <button onClick={() => this.deleteReminders(reminder.id)} className=\"btn btn-dark grow shadow-4\">&#x2715;</button>\r\n                    </li>\r\n                </ul>\r\n            );\r\n        })\r\n        return reminderList;\r\n    }\r\n\r\n    allowNotifications = () => {\r\n        if (Push.Permission.has) {\r\n            console.log('permission granted')\r\n        }\r\n    }\r\n\r\n    renderExpiryNotifications = (item, time) => {\r\n        Push.create(\"Expiry ALERT!\", {\r\n            body: `${item} is expiring ${time}!`,\r\n            icon: '/icon.png',\r\n            timeout: 5000,\r\n            onClick: function () {\r\n                window.focus();\r\n                this.close();\r\n            }\r\n        });\r\n    }\r\n\r\n    renderAddConfirmation = (item, time) => {\r\n        Push.create(\"Reminder created!\", {\r\n            body: `Reminder for ${item} is created. Item will expire in ${time}!`,\r\n            icon: '/icon.png',\r\n            timeout: 5000,\r\n            onClick: function () {\r\n                window.focus();\r\n                this.close();\r\n            }\r\n        });\r\n    }\r\n\r\n    //wrapper functions\r\n    wrapperAdd = () => {\r\n        const item = this.state.input;\r\n        const time = moment(new Date(this.state.dueDate)).fromNow();\r\n        this.addReminders();\r\n        if (this.state.input && this.state.dueDate) {\r\n            this.renderAddConfirmation(item, time);\r\n        }\r\n    }\r\n\r\n    wrapperComplete = (reminder) => {\r\n        this.props.completeReminders(reminder);\r\n        this.deleteReminders(reminder.id);\r\n    }\r\n    \r\n    //pop expiring reminders when loaded\r\n    componentDidMount = () => {\r\n        this.state.reminders.forEach(reminder => {\r\n            if (moment(new Date(reminder.dueDate)).fromNow() === 'in 7 days') {\r\n                runReminders\r\n                    .push(this.renderExpiryNotifications(reminder.text,\r\n                        moment(new Date(reminder.dueDate)).fromNow()));\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { onRouteChange } = this.props;\r\n        return (\r\n            <div className=\"App\">\r\n                <button\r\n                    onClick={() => onRouteChange('signin')}\r\n                    className=\"btn btn-secondary signout-button black grow shadow-4\"\r\n                    type=\"button\">\r\n                    Sign Out\r\n                        </button>\r\n                <div className=\"title br3\">\r\n                    <div className=\"header\">\r\n                        <hr></hr>\r\n                        <h1 className=\"shadow-3 pa2 burpee\"><strong> &#x23F0; B U R P E E </strong></h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-inline\">\r\n                    <div className=\"reminder-container\">\r\n                        <div className=\"reminder-inputs br3 shadow-5\">\r\n                            <input\r\n                                id=\"myForm\"\r\n                                onChange={this.onInputChange}\r\n                                className=\"form-control item-input\"\r\n                                placeholder=\"Insert item name\"\r\n                            />\r\n\r\n                            <input\r\n                                id=\"myForm\"\r\n                                onChange={this.onDateChange}\r\n                                className=\"form-control date-input\"\r\n                                type=\"datetime-local\"\r\n                            />\r\n\r\n                            <button\r\n                                onClick={this.wrapperAdd}\r\n                                className=\"add-btn btn btn-success grow add-button br2 shadow-4\"\r\n                                type=\"button\">\r\n                                &#xff0b;\r\n                            </button>\r\n                        </div>\r\n                        <div>\r\n                            {this.displayReminders()}\r\n                        </div>\r\n\r\n                        <button\r\n                            onClick={() => onRouteChange('milestones')}\r\n                            className=\"btn btn-secondary achieve-button grow shadow-4\"\r\n                            type=\"button\">\r\n                            Milestones &#x1f3c6;\r\n                            </button>\r\n\r\n                        <button\r\n                            onClick={this.clearReminders}\r\n                            className=\"btn btn-secondary clear-button grow shadow-4\"\r\n                            type=\"button\">\r\n                            Clear All &#x1f5d1;\r\n                            </button>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Reminder;","import React, { Component } from 'react';\r\nimport './Card.css';\r\nimport { bake_cookie, read_cookie } from 'sfcookies';\r\n\r\nlet unlockedList = read_cookie('unlockedList');\r\n\r\n// destructuring\r\nclass Card extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    removeClass = (id, name, count, countReq) => {\r\n        let parent = document.getElementById(id);\r\n        //preventing the null from calling functions\r\n        console.log(count);\r\n        if (parent) {\r\n            if (count >= countReq && !unlockedList.includes(id)) { //count req met and not unlocked\r\n                alert(`Congrats! You've unlocked a ${name}!`);\r\n                //remove div cover\r\n                parent.classList.remove('parent');\r\n                parent.children[0].classList.add('z-1');\r\n                //add unlocked card id into list\r\n                unlockedList.push(id);\r\n                bake_cookie('unlockedList', unlockedList);\r\n                console.log(unlockedList);\r\n            } else {\r\n                if (unlockedList.includes(id)) { //unlocked cards\r\n                    //do nothing\r\n                } else { // locked cards\r\n                    alert(`Reward locked.. Consume ${countReq - count} more items to unlock your reward!`);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    renderParentClass = (id) => {\r\n        //check against the unlockedList and only render div covers for the locked ones\r\n        if (unlockedList.includes(id)) {\r\n            return 'br3 pa10 ma3 bw2';\r\n        } else {\r\n            return 'br3 pa10 ma3 bw2 parent';\r\n        }\r\n    }\r\n\r\n    renderChildClass = (id) => {\r\n        if (unlockedList.includes(id)) {\r\n            return 'tc bg-washed-blue br3 pa10 ma2 bw3 shadow-3 ba grow child z-1';\r\n        } else {\r\n            return 'tc bg-washed-blue br3 pa10 ma2 bw3 shadow-3 ba grow child';\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { count, countReq, id, name, height, weight, type } = this.props;\r\n        return (\r\n            <div className=\"cardWrapper\">\r\n                <div id={id} onClick={() => this.removeClass(id, name, count, countReq)} className={this.renderParentClass(id)}>\r\n                    <div id={id} className={this.renderChildClass(id)}>\r\n                        <h4 className=\"tl ma1 b bb\">&nbsp; {name}</h4>\r\n                        <img className=\"pa1\" alt=\"pokemon\" src={`https://pokeres.bastionbot.org/images/pokemon/${id}.png`} width=\"200\" height=\"200\" />\r\n                        <div className=\"pa3\">\r\n                            <div className=\"bw2 ba pa1 bg-washed-green\">\r\n                                <p className=\"ma0 pa1 bt\">No. <strong>{id}</strong></p>\r\n                                <p className=\"b pa1\">\r\n                                    Height: {height} <br />\r\n                                Weight: {weight} <br />\r\n                                Type: {type}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ count, pokemon }) => {\r\n    return (    \r\n        <div className=\"flex flex-wrap pt3 justify-center\" style={{flex: '1 1 auto'}}>\r\n            {console.log('count inside Cardlist', count)}\r\n            {\r\n                pokemon.map((pokemon, i) => {\r\n                    return (\r\n                        <Card   \r\n                            count={count}   \r\n                            key={i}                 \r\n                            id={pokemon.id}\r\n                            name={pokemon.name}\r\n                            height={pokemon.height}\r\n                            weight={pokemon.weight}\r\n                            type={pokemon.type}\r\n                            countReq={pokemon.countReq}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","export const pokemon = [\r\n    {   \r\n        countReq: 1,\r\n        id: 25,\r\n        name: 'Pikachu',\r\n        height: '0.4 m (1′04″)',\r\n        weight: '6.0 kg (13.2 lbs)',\r\n        type: 'Electric'\r\n      },\r\n    { \r\n      countReq: 2,\r\n      id: 2,\r\n      name: 'Bulbasaur',\r\n      height: '0.7 m (2′04″)',\r\n      weight: '6.9 kg (15.2 lbs)',\r\n      type: 'Grass, Poison'\r\n    },\r\n    {\r\n        countReq: 3,\r\n        id: 7,\r\n        name: 'Squirtle',\r\n        height: '0.5 m (1′08″)',\r\n        weight: '9.0 kg (19.8 lbs)',\r\n        type: 'Water'\r\n      },\r\n      {\r\n        countReq: 4,\r\n        id: 4,\r\n        name: 'Charmander',\r\n        height: '0.6 m (2′00″)',\r\n        weight: '8.5 kg (18.7 lbs)',\r\n        type: 'Fire'\r\n      },   \r\n      {\r\n        countReq: 5,\r\n        id: 132,\r\n        name: 'Ditto',\r\n        height: '0.3 m (1′00″)',\r\n        weight: '4.0 kg (8.8 lbs)',\r\n        type: 'Normal'\r\n      },   \r\n      {\r\n        countReq: 6,\r\n        id: 143,\r\n        name: 'Snorlax',\r\n        height: '2.1 m (6′11″)',\r\n        weight: '460.0 kg (1014.1 lbs)',\r\n        type: 'Normal'\r\n      },   \r\n      {\r\n        countReq: 7,\r\n        id: 382,\r\n        name: 'Kyogre',\r\n        height: '4.5 m (14′09″)',\r\n        weight: '352.0 kg (776.0 lbs)',\r\n        type: 'Water'\r\n      },   \r\n      {\r\n        countReq: 8,\r\n        id: 383,\r\n        name: 'Groudon',\r\n        height: '3.5 m (11′06″)',\r\n        weight: '950.0 kg (2094.4 lbs)',\r\n        type: 'Ground'\r\n      },   \r\n      {\r\n        countReq: 3,\r\n        id: 384,\r\n        name: 'Rayquaza',\r\n        height: '7.0 m (23′00″)',\r\n        weight: '206.5 kg (455.3 lbs)',\r\n        type: 'Dragon, Flying'\r\n      },\r\n      {\r\n        countReq: 3,\r\n        id: 150,\r\n        name: 'Mewtwo',\r\n        height: '2.0 m (6′07″)',\r\n        weight: '122.0 kg (269.0 lbs)',\r\n        type: 'Psychic'\r\n      },\r\n\r\n  ];\r\n  ","import React, { Component } from 'react';\r\nimport './Milestone.css';\r\nimport CardList from './CardList';\r\nimport { pokemon } from './pokemon';\r\n\r\nclass Milestone extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pokemon: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ pokemon: pokemon })\r\n        console.log('count inside milstone', this.props.count);\r\n    }\r\n\r\n    render() {\r\n        const { onRouteChange, } = this.props;\r\n        return (\r\n            <div>\r\n            <h2 className=\"tc mt5 white shadow-4 pt3 pb3\">Mystery Rewards</h2>\r\n         \r\n                 <nav>                \r\n                 <button\r\n                    onClick={() => onRouteChange('signin')}\r\n                    className=\"btn btn-secondary signout-button black grow shadow-4 ma0 mr5\"\r\n                    type=\"button\">\r\n                    Sign Out\r\n                    </button>\r\n\r\n                <button\r\n                    onClick={() => onRouteChange('home')}\r\n                    className=\"btn btn-secondary home-button black grow shadow-4 ma0 ml5\"\r\n                    type=\"button\">\r\n                    Home &#x1f3e0;\r\n                 </button>\r\n                 </nav>\r\n                 \r\n                 <p className=\"text1 tc white\">Click on the cards to unlock rewards.</p>  \r\n                 <p className=\"text2 tc white\">{this.props.count} Item(s) consumed before expiry!</p>\r\n                <div>\r\n                    <CardList count={this.props.count} pokemon={pokemon} />\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Milestone;","import React, { Component } from 'react';\r\nimport SignIn from './components/SignIn';\r\nimport Register from './components/Register';\r\nimport Reminder from './components/Reminder';\r\nimport Milestone from './components/Milestone';\r\nimport moment from 'moment';\r\nimport { bake_cookie, read_cookie } from 'sfcookies';\r\nimport './App.css';\r\n\r\nconst initialState = {\r\n  input: '',\r\n  route: 'signin',\r\n  isSignedIn: false,\r\n  count: read_cookie('countCookie'),\r\n  user: {\r\n    id: '',\r\n    name: '',\r\n    email: '',\r\n    entries: 0,\r\n    joined: ''\r\n  }\r\n}\r\n\r\n//storing the number of timely reminders completed\r\nlet count = read_cookie('countCookie');\r\n\r\nclass App extends Component {\r\n  // eslint-disable-next-line\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      input: '',\r\n      route: 'signin',\r\n      isSignedIn: false,\r\n      user: {\r\n        id: '',\r\n        name: '',\r\n        email: '',\r\n        entries: 0,\r\n        joined: ''\r\n      }\r\n    }\r\n  }\r\n  \r\n  loadUser = (data) => {\r\n    this.setState({\r\n      user: {\r\n        id: data.id,\r\n        name: data.name,\r\n        email: data.email,\r\n        entries: data.entries,\r\n        joined: data.joined\r\n      }\r\n    })\r\n  }\r\n\r\n  onRouteChange = (route) => {\r\n    if (route === 'signout') {\r\n      this.setState(initialState);\r\n    } else if (route === 'home' || route === 'milestone') {\r\n      this.setState({ isSignedIn: true });\r\n    } \r\n    this.setState({ route: route });\r\n  }\r\n\r\n  completeReminders = (reminder) => {\r\n    let newCount = count++;\r\n    if (moment() <= moment(new Date(reminder.dueDate))) {\r\n        bake_cookie('countCookie', newCount);\r\n        console.log(moment() <= moment(new Date(reminder.dueDate)));\r\n    }\r\n}\r\n\r\ncomponentDidMount = () => {\r\n  console.log('stateCount', this.state.count);\r\n  console.log('countCookie', read_cookie('countCookie'));\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.route === 'home'\r\n          ? <Reminder completeReminders={this.completeReminders} onRouteChange={this.onRouteChange} />\r\n          : (\r\n            this.state.route === 'signin'\r\n              ? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\r\n              : (\r\n                this.state.route === 'register'\r\n                  ? <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\r\n                  : <Milestone count={count} onRouteChange={this.onRouteChange} />\r\n              )\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'tachyons';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}